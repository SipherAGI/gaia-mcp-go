name: Build and Test

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  build-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags "-X gaia-mcp-go/version.Version=dev -X gaia-mcp-go/version.GitCommit=${{ github.sha }} -X gaia-mcp-go/version.BuildDate=$(date -u '+%Y-%m-%d_%H:%M:%S')" \
            -o bin/gaia-mcp-go-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} \
            ./main.go
